name: Run Tests

on:
  push:
    paths:
      - '**.php'
      - '**.stub'
      - '.github/workflows/run-tests.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    paths:
      - '**.php'
      - '**.stub'
      - '.github/workflows/run-tests.yml'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        php: [8.2, 8.3, 8.4]
        laravel: [12.*, 11.*, 10.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*
            testbench: 8.*
            carbon: ^2.63
          - laravel: 11.*
            testbench: 9.*
            carbon: ^2.63
          - laravel: 12.*
            testbench: 10.*
            carbon: ^2.63
        exclude:
          - laravel: 10.*
            php: 8.4

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: xdebug
          tools: composer:v2

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory (Linux/Mac)
        if: matrix.os != 'windows-latest'
        id: composer-cache-unix
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Get composer cache directory (Windows)
        if: matrix.os == 'windows-latest'
        id: composer-cache-win
        run: echo "dir=$(composer config cache-files-dir)" | Out-File -Append -FilePath $env:GITHUB_OUTPUT -Encoding utf8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ matrix.os != 'windows-latest' && steps.composer-cache-unix.outputs.dir || steps.composer-cache-win.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.stability }}-${{ matrix.laravel }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.os == 'windows-latest' && '^^^' || '' }}${{ matrix.carbon }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Setup Directories for Tests (Linux/Mac)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p build/coverage
          mkdir -p workbench/app/Models

      - name: Setup Directories for Tests (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -Force -Path build/coverage
          mkdir -Force -Path workbench/app/Models

      - name: Execute tests
        if: ${{ !(matrix.os == 'ubuntu-latest' && matrix.php == '8.4' && matrix.laravel == '12.*' && matrix.stability == 'prefer-stable') }}
        run: vendor/bin/pest --parallel --ci
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"

      - name: Execute tests with coverage
        if: matrix.os == 'ubuntu-latest' && matrix.php == '8.4' && matrix.laravel == '12.*' && matrix.stability == 'prefer-stable'
        run: vendor/bin/pest --parallel --ci --coverage --coverage-clover=build/coverage.xml
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
          XDEBUG_MODE: coverage
          
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        if: success() && matrix.os == 'ubuntu-latest' && matrix.php == '8.4' && matrix.laravel == '12.*' && matrix.stability == 'prefer-stable'
        with:
          file: build/coverage.xml
          fail_ci_if_error: false
